BUILDER PATTERN

Il Builder è un pattern di tipo creazionale molto popolare di media complessità, a cosa serve?
Consente di costruire oggetti complessi di diversi tipi separando gli step di creazione
utilizzando lo stesso codice di costruzione.
Possiamo immaginarlo un po' come una "catena di montaggio".

Il builder viene in nostro aiuto quando abbiamo un costruttore con tanti parametri che rende l'inizializzazione
di un oggetto "brutta" e pesante. Invece di andarci a definire tutti i parametri nel costruttore della classe,
andiamo a separarli in nuove classi (un builder per ogni tipo di oggetto da costruire) chiamate builders.
Questo permette di creare oggetti step by step chiamando solo i builders necessari e in più di variare la
rappresentazione, il tipo e il valore di questi oggetti: per esempio possiamo costruire una casa o un castello,
di legno ma anche di pietra, con o senza finestre, ecc... a seconda dei builders che utiliazziamo.

Gli elementi del builder sono:
Director -> costruisce il prodotto utilizzando l’interfaccia Builder.
Builder -> l’interfaccia che definisce gli step comuni di tutti i tipi di builders.
ConcreteBuilder -> implementano l'interfaccia comune Builder, costruiscono e assemblano
le parti dell'oggetto da creare.
Product -> il prodotto finale che viene costruito dal Builder.
